@import "../animations";

/*
  | View composers
  |----------------
 */

// OverlayViewComposer customs
.layer {
  width: 100%;
  height: 100%;

  position: absolute;
  top: 0;
  left: 0;

  // non-main layers should not lock main layer
  &:not(&_main) {
    pointer-events: none;

    // nest is necessary but shouldn't interrupt pointer events by itself;
    // any children content should be able to catch its own pointer events
    > .nest > * {
      pointer-events: auto;
    }
  }
}

/*
  | Layout
  |----------------
  |
  |
  |
 */


.layout-overlay {
  width: 100%;
  height: 100%;

  pointer-events: none;

  position: absolute;
  top: 0;
  left: 0;
}

.root {
  display: flex;
  justify-content: space-between;
  box-sizing: border-box;
  overflow: hidden;
}

.pane {
  display: flex;
  justify-content: space-between;
  // WARNING: It's vital to NOT use border-box sizing here!
  flex-grow: 1;

  overflow: hidden;
  position: relative;

  &.pane-h {
    flex-direction: column;
  }

  &.pane-v {
    flex-direction: row;
  }

  &.pane_noselect {
    user-select: none;
  }
}

.cover {
  display: flex;
  justify-content: center;
  align-items: center;

  position: absolute;
  width: 100%;
  height: 100%;

  background-color: #b9b9fa;

  transition: opacity 100ms linear;
  opacity: 0;

  &.cover_enabled {
    opacity: 1;
  }

  .cover__block {
    flex-direction: column;
    text-align: center;
  }

  .cover__img {
    width: 100px;
  }
}

.handler {
  padding: 0;
  flex: 0 0 auto;

  &::before {
    content: '';
    display: block;
    background: red;
  }

  &.handler-h {
    height: 30px;
    cursor: ew-resize;
    margin: auto 0;

    &::before {
      width: 6px;
      height: 100%;
    }
  }

  &.handler-v {
    width: 30px;
    cursor: ns-resize;
    margin: 0 auto;

    &::before {
      width: 100%;
      height: 6px;
    }
  }
}

// Рамка в панели.
// Принимает nest'ы
.frame {
  box-sizing: border-box;
  //position: absolute;

  width: 100%;
  height: 100%;

  overflow: hidden;

  &.frame_covered {
    display: none;
  }
}

// Вкладочное отображение
// Управляет переключением nest'ов
.tab-display {
  width: 100%;
  height: 100%;

  display: flex;
  flex-direction: column;
}

// Список вкладок
.tab-list {

}

.tab {
  .tab__btn {
    float: right;
  }
}

.tab__btn {
  position: relative;

  &.tab__btn_active {

  }
}

ul.ddmenu {
  display: table;
  position: absolute;

  list-style-type: none;

  top: 0;
  left: 0;

  pointer-events: all;

  li {
    cursor: pointer;

    white-space: nowrap;
  }
}

// Содержимое вкладки
.tab-content {
  flex-grow: 1;

  width: 100%;
  height: 100%;

  overflow: hidden;
}

// Layout Theme (can be replaced with extra customs)
.pane {
  border: 1px solid black;

  //&.pane-enter, &.pane-exit {
  //  height: 0;
  //}

  &.pane_animated {
    &.pane-h {
      transition: opacity   0.6s @fade,
                  width     0.6s @fade,
                  min-width 0.6s @fade,
                  max-width 0.6s @fade,
                  flex-basis 0.6s @fade;

      &.panefade-enter {opacity: 0;}
      &.panefade-enter-active {opacity: 1;}
      &.panefade-exit {opacity: 1;}
      &.panefade-exit-active {opacity: 0;}

      &.pane-enter:not(.pane-enter-active), &.pane-exit {
        &:not(.pane-sizemin):not(.pane-sizemax) {
          flex-basis: 0 !important;
        }

        &.pane-sizemin {
          min-width: 0 !important;
        }

        &.pane-sizemax {
          max-width: 0 !important;
        }
      }
    }

    &.pane-v {
      transition: opacity   0.6s @fade,
                  height      0.6s @fade,
                  min-height  0.6s @fade,
                  max-height  0.6s @fade;

      &.pane-enter:not(.pane-enter-active), &.pane-exit {
        opacity: 0;

        &:not(.pane-sizemin):not(.pane-sizemax) {
          height: 0 !important;
        }

        &.pane-sizemin {
          min-height: 0 !important;
        }

        &.pane-sizemax {
          max-height: 0 !important;
        }
      }
    }
  }
}

.handler {
  z-index: 1;

  transition: transform ease-out 200ms;

  &:hover {
    &.handler-v {
      transform: scaleY(3.5);
    }

    &.handler-h {
      transform: scaleX(3.5);
    }
  }
}

.frame {

}

.tab-list {
  border-bottom: solid 1px;
}

li.tab {
  display: inline-block;
  padding: 5px 10px;

  list-style-type: none;
  border-right: solid 1px;

  background-color: lightslategrey;

  &:hover {cursor: pointer;}

  &.tab_active {
    background-color: lightgray;
  }

  &.tab_single {
    width: 100%;
    text-align: center;
    padding: 0;
  }
}

.tab__btn {
  position: relative;

  padding: 0 5px;

  &::before {
    content: '=';
  }

  &.tab__btn_active {
     background: #9c9cff;
  }
}

ul.ddmenu {
  background: lightgrey;
  margin: 0;
  padding: 0;
  border: solid 1px;

  li {
    padding: 0 5px;

    &:hover {
      background-color: #9c9cff;
    }
  }
}
