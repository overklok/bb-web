image: node:14.18
options:
  max-time: 30
definitions:
  steps:
    - step: &build
        name: Build
        caches:
          - node
        script:
          - npm install
          - npm run build
          - apt-get update && apt-get install -y zip
          - zip -r ./bundles.zip artifacts scripts appspec.yml 
        artifacts:
          - bundles.zip
    - step: &deploy
        name: Upload to S3
        services:
          - docker
        script:
          - pipe: atlassian/aws-code-deploy:0.2.10
            variables:
              AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
              AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
              AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
              COMMAND: 'upload'
              APPLICATION_NAME: ${AWS_APPLICATION_NAME}
              ZIP_FILE: 'bundles.zip'
          - pipe: atlassian/aws-code-deploy:0.2.10
            variables:
              AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
              AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
              AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
              COMMAND: 'deploy'
              APPLICATION_NAME: ${AWS_APPLICATION_NAME}
              DEPLOYMENT_GROUP: ${AWS_DEPLOYMENT_GROUP}
              IGNORE_APPLICATION_STOP_FAILURES: 'true'
              FILE_EXISTS_BEHAVIOR: 'OVERWRITE'
              WAIT: 'true'
pipelines:
  branches:
    # TODO: develop -> master
    develop:
      - step: *build
      - step:
          <<: *deploy
          deployment: Production
# definitions:
#   steps:
#     - step: &build
#         name: Build
#         caches:
#           - node
#         script:
#           - npm install
#           - npm run build
#         artifacts:
#           - artifacts/**
#     - step: &deploy
#         name: Deploy 
#         script:
#           - pipe: atlassian/scp-deploy:1.2.1 
#             variables:
#              USER: $SSH_USER
#              SERVER: $SSH_SERVER
#              REMOTE_PATH: '${SRV_WORKDIR}/tmp/frontend'
#              LOCAL_PATH: artifacts/*
#           - pipe: atlassian/ssh-run:0.4.0
#             variables:
#               SSH_USER: $SSH_USER
#               SERVER: $SSH_SERVER
#               MODE: 'command'
#               COMMAND: '${SRV_WORKDIR}/bin/scripts/deploy_webapp.sh'
#               ENV_VARS: >-
#                 DEPL_WORKDIR=${SRV_WORKDIR}
#                 DEPL_APP_VENV=${SRV_APP_VENV}
#                 DEPL_APP_WSGI=${SRV_APP_WSGI}
